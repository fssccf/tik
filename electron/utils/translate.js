const _ = require('lodash')

/* 转译配置 */
exports.mode = {
  status: {
    inQueue: "队列中",
    inGame: "游戏中",
    championSelect: "英雄选择中",
    outOfGame: "退出游戏中",
    hosting_NORMAL: "匹配组队中-队长",
    hosting_RANKED_SOLO_5x5: "单排组队中-队长",
    hosting_RANKED_FLEX_SR: "组排组队中-队长",
    hosting_ARAM_UNRANKED_5x5: "大乱斗5v5组队中-队长",
    hosting_URF: "无限火力组队中-队长",
    hosting_BOT: "人机组队中-队长",
    ChampSelect: "英雄选择中",
    ReadyCheck: "等待接受对局",
    InProgress: "进行中",
    None: "无",
  },
  game: {
    CLASSIC: "经典模式",
    ARAM: "大乱斗",
    TFT: "云顶之弈",
    URF: "无限火力",
    PRACTICETOOL: "自定义",
  },
  match: {
    NORMAL: "匹配",
    RANKED_SOLO_5x5: "单双排",
    RANKED_FLEX_SR: "组排",
    ARAM_UNRANKED_5x5: "大乱斗5v5",
    URF: "无限火力",
    BOT: "人机",
    PRACTICETOOL: "自定义",
  },
  rank: {
    NONE: "无段位",
    IRON: "黑铁",
    BRONZE: "青铜",
    SILVER: "白银",
    GOLD: "黄金",
    PLATINUM: "白金",
    DIAMOND: "钻石",
    MASTER: "大师",
    GRANDMASTER: "宗师",
    CHALLENGER: "王者",
  },
  environment: {
    HN1: "艾欧尼亚",
    HN2: "祖安",
    HN3: "诺克萨斯",
    HN4: "班德尔城",
    HN5: "皮尔特沃夫",
    HN6: "战争学院",
    HN7: "巨神峰 ",
    HN8: "雷瑟守备",
    HN9: "裁决之地",
    HN10: "黑色玫瑰",
    HN11: "暗影岛",
    HN12: "钢铁烈阳 ",
    HN13: "水晶之痕",
    HN14: "均衡教派",
    HN15: "影流",
    HN16: "守望之海",
    HN17: "征服之海",
    HN18: "卡拉曼达",
    HN19: "皮城警备",
    WT1: "比尔吉沃特",
    WT2: "德玛西亚",
    WT3: "弗雷尔卓德",
    WT4: "无畏先锋",
    WT5: "恕瑞玛",
    WT6: "扭曲丛林",
    WT7: "巨龙之巢",
    HN1_NEW: "艾欧尼亚",
    HN2_NEW: "祖安",
    HN3_NEW: "诺克萨斯",
    HN4_NEW: "班德尔城",
    HN5_NEW: "皮尔特沃夫",
    HN6_NEW: "战争学院",
    HN7_NEW: "巨神峰 ",
    HN8_NEW: "雷瑟守备",
    HN9_NEW: "裁决之地",
    HN10_NEW: "黑色玫瑰",
    HN11_NEW: "暗影岛",
    HN12_NEW: "钢铁烈阳 ",
    HN13_NEW: "水晶之痕",
    HN14_NEW: "均衡教派",
    HN15_NEW: "影流",
    HN16_NEW: "守望之海",
    HN17_NEW: "征服之海",
    HN18_NEW: "卡拉曼达",
    HN19_NEW: "皮城警备",
    WT1_NEW: "比尔吉沃特",
    WT2_NEW: "德玛西亚",
    WT3_NEW: "弗雷尔卓德",
    WT4_NEW: "无畏先锋",
    WT5_NEW: "恕瑞玛",
    WT6_NEW: "扭曲丛林",
    WT7_NEW: "巨龙之巢",
    BGP1: "男爵领域,",
  }
}

exports.translate = (type, key) => {
  const config = this.mode[type]
  return config[key]
}

